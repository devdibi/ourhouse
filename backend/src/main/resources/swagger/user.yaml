openapi: 3.0.0
info:
  title: Ourhouse UserAPI
  description: <h2>우리의집 유저 API</h2>
  version: 1.0.0
security:
  - bearerAuth: []
#servers:
#  - url: https://devdibi.site/ousrhouse/
#    description: ourhouse 서비스
components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      scheme: bearer
      bearerFormat: JWT
      name: Authorization
      in: header
paths:
  # 유저 - 회원가입
  /user/sign-up:
    post:
      tags:
        - user
      summary: 회원가입
      requestBody:
        description: 회원가입
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test_admin@gmail.com
                password:
                  type: string
                  example: test_admin
                name:
                  type: string
                  example: test_admin
                gender:
                  type: integer
                  example: 1
                age:
                  type: integer
                  example: 20
                role:
                  type: string
                  example: admin
      responses:
        200:
          description: 회원가입완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: string
                    example: OK
                  msg:
                    type: string
                    example: 회원 가입 완료
                  data:
                    type: object
                    example: null
        409:
          description: 이메일 중복
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: CONFLICT
                  msg:
                    type: string
                    example: 이미 존재하는 회원입니다.
                  data:
                    type: object
                    example: null
  # 유저  - 로그인
  /user/sign-in:
    post:
      tags:
        - user
      summary: 로그인
      requestBody:
        description: "로그인"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test_admin@gmail.com
                password:
                  type: string
                  example: test_admin
      responses:
        200:
          description: 로그인 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: string
                    example: OK
                  msg:
                    type: string
                    example: 로그인 완료
                  data:
                    type: string
                    example: token
        404:
          description: 이메일 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: NOT_FOUND
                  msg:
                    type: string
                    example: 존재하지 않는 회원입니다.
                  data:
                    type: string
                    example: null
        400:
          description: 비밀번호 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: BAD_REQUEST
                  msg:
                    type: string
                    example: 잘못된 비밀번호입니다.
                  data:
                    type: string
                    example: null