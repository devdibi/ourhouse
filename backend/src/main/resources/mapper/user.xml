<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.ourhouse.mapper.UserMapper">

	<select id="findUserByEmail" parameterType="String" resultType="userDto">
		SELECT email, name, gender, age, dwell_area, favorite_area, password, role
		FROM USER
		WHERE email = #{email};
	</select>

	<insert id="registerUser" parameterType="userDto">
		<choose>
			<when test="(dwellArea == null or dwellArea == '') and (favoriteArea == null or favoriteArea == '')">
				INSERT INTO User (email, password, name, gender, age, age_group, join_date, role)
				VALUES (#{email}, #{password}, #{name}, #{gender}, #{age}, #{ageGroup}, NOW(), #{role})
			</when>
			<when test="dwellArea == null or dwellArea == ''">
				INSERT INTO User (email, password, name, gender, age, age_group, favorite_area, join_date, role)
				VALUES (#{email}, #{password}, #{name}, #{gender}, #{age}, #{ageGroup}, #{favoriteArea}, NOW(), #{role})
			</when>
			<when test="favoriteArea == null or favoriteArea == ''">
				INSERT INTO User (email, password, name, gender, age, age_group, dwell_area, join_date, role)
				VALUES (#{email}, #{password}, #{name}, #{gender}, #{age}, #{ageGroup}, #{dwellArea}, NOW(), #{role})
			</when>
			<otherwise>
				INSERT INTO User (email, password, name, gender, age, age_group, favorite_area, dwell_area, join_date, role)
				VALUES (#{email}, #{password}, #{name}, #{gender}, #{age}, #{ageGroup}, #{favoriteArea}, #{dwellArea}, NOW(), #{role})
			</otherwise>
		</choose>
	</insert>
	
<!-- 	<select id="loginUser" parameterType="map" resultType="userDto">
		SELECT email, name, gender, age, dwell_area, favorite_area, password
		FROM USER
		WHERE email = #{email} AND password = #{password}
	</select> -->
	
<!-- 	<update id="updatePassword" parameterType="String">
		UPDATE USER
		SET password = #{password}
		WHERE email = #{email}
	</update> -->
	
	<update id="deleteUser" parameterType="String">
		UPDATE USER
		SET status = 0
		WHERE email = #{email}
	</update>
	
	<select id="loadAllUsers" resultType="userListDto">
		SELECT email, name, gender, age, dwell_area, favorite_area, password        
		FROM USER
		WHERE status = 1 AND gender != 0
		ORDER BY join_date
	</select>
	
	<update id="randomPassword" parameterType="map">
		UPDATE USER
		SET password = #{password}
		WHERE email = #{email}
	</update>
	
	<select id="compareName" parameterType="String" resultType="String">
		SELECT name
		FROM user
		WHERE email = #{email}
	</select>
	
		<select id="getUserInfo" parameterType="String" resultType="userDto">
		SELECT email, name, gender, age, dwell_area dwellArea, favorite_area favoriteArea
		FROM user
		WHERE email = #{email};
	</select>
	
	<select id="getSidoName" parameterType="String" resultType="String">
		SELECT name
		FROM sido
		WHERE sido_code = #{sido}
	</select>
	
	<select id="getSigunguName" parameterType="String" resultType="String">
		SELECT name
		FROM sigungu
		WHERE sigungu_code = #{sigungu}
	</select>
	
	<select id="getDongName" parameterType="String" resultType="String">
		SELECT name
		FROM dong
		WHERE dong_code = #{dong}
	</select>
	
	<update id="updateUserInfo" parameterType="userDto">
		UPDATE USER
		SET name = #{name}, age = #{age}, gender = #{gender}, dwell_area = #{dwellArea}, favorite_area = #{favoriteArea}
		<if test="password != null and password !=''">
		, password = #{password}
		</if>
		WHERE email = #{email}
	</update>
	
	<select id="getFavoriteHouses" parameterType="String" resultType="aptInfoDto">
		SELECT name aptName, jibun_address jibunAddress, 
			price_avg priceAvg, area_avg areaAvg, sidoName, gugunName, dongName
		FROM favorite_house
		LEFT JOIN house_info USING (apt_code)
		LEFT JOIN dongne ON house_info.dong_code = dongne.dongCode
		WHERE email = #{email};
		<!-- SELECT apt_code aptCode, build_year buildYear, name, jibun_address jibunAddress, road_address roadAddress, lng, lat, dong_code dongCode
		FROM favorite_house LEFT JOIN house_info USING (apt_code)
		WHERE email = #{email}; -->
	</select>
	
	<select id="getFavoriteDeals" parameterType="String" resultType="dealInfoDto">
		SELECT price, area, floor, name aptName, jibun_address jibunAddress, 
			sidoName, gugunName, dongName
		FROM favorite_deal
		LEFT JOIN house_deal USING (deal_code)
		LEFT JOIN house_info ON house_deal.apt_code = house_info.apt_code
		LEFT JOIN dongne ON house_info.dong_code = dongne.dongCode
		WHERE email = #{email};
	
		<!-- SELECT favorite_deal.deal_code dealCode, price, year, month, day, area, floor, favorite_deal.apt_code aptCode, 
		build_year buildYear, name, jibun_address jibunAddress, road_address roadAddress, lng, lat, house_deal.dong_code
		FROM favorite_deal LEFT JOIN house_deal ON favorite_deal.deal_code = house_deal.deal_code
		LEFT JOIN house_info ON favorite_deal.apt_code = house_info.apt_code
		WHERE email = #{email}; -->
	</select>
	
</mapper>